- BUG mark changes seem to always be relative to cursor even when mark is set
- BUG: highlight matching parenthesis doesn't work anymore
- BUG: autocompletions no longer correctly updated
- BUG: open a file -> there is a tcl error while searching
- BUG: open new editor, create three frames, drag the bottom right one to the left -> frame suddenly shows +null+

- m shortcus:
 - m all -> m 1:1 $:$
 - m sort -> swaps mark and cursor if mark is after cursor
 - m line -> { m sort; m +0:1 +0:$ }
- s {^.*$} -> forall

- replace tcl regex engine with TRE

- deduplication for iopen is actually necessary
- how does one create a new file?
- set column number for background processes whenever possible
- less ugly indicators for autowrapping
- keyboard marking should behave like mouse marking and not constantly update the clipboard with serialized data
 - after command execution, keypress and mouse movement execute the following:
 - if no selection is active release the primary clipboard
 - if a selection is active capture the primary clipboard
 - center click paste needs to collect the selection text before changing mark and cursor. That's all
 - no primary clipboard implicit management happens inside scripts or on macro recording
- tabs (and no hidden buffers)
- slash all special mouse actions, add menus and close buttons
- go-able things become links
- save, refresh becomes a subcommand of buffer
- automatically pop-up autocompletion and update autocompletions when leaving dirty rows (enter should not autocomplete, at least on the command line)
- guessing indentation (dtrt-indent mode1)
- auto-equalize indentation on paste
- multiprocess highlighting
- sloppy focus (change focus only when the mouse moves to a different frame) and disable warping
- macro recording
- resize should work across multiple frames
- some commands should be displayed on the working directory line (last command, two most used commands)
- move stuff to a namespace
- in buffers associated to jobs the cursor should be fixed at the end and inserting text should result in input to the job

- comment region command
- ability to persist the status of a window
- auto-reloading buffers when there is no change and the file on disk was changed
- debugger integration (just displaying currently executed line)
- selection should copy selected text on past not on selection, for better efficiency (selection slowdown is noticeable on mouse selection)
- extend regular expressions in 's' to be lexically aware
- word movement, word selection and tokenization should be tied to syntax analysis
- make easy way to reindent though external filter
- 's' command: support normal pcre flags
- use an editor for the command line
- cleanup of unused functions (how?)
- all configuration options in the default configuration file with comments
- open in a directory view is relative to the directory

- s command should only be restricted by a selection to a range of lines, ie make regex_endpoint a line without glyph information and use the first line it shouldn't change