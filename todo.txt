- BUG: current line highlight incorrect after first expose

- popup menu item to search in tags
- automatically pop-up autocompletion and update autocompletions when leaving dirty rows (enter should not autocomplete, at least on the command line), add tags to autocompletions, add closed buffer autocompletions to a permanent completions repository

- make lexy a flat table, lexyassoc just gives the starting state but we can move to other states (implement mixed html / javascript mode)
- multiprocess highlighting
- set column number for background processes whenever possible
- non editable bg buffers, send typed text to job stdin
- less ugly indicators for autowrapping
- keyboard marking should behave like mouse marking and not constantly update the clipboard with serialized data
 - after command execution, keypress and mouse movement execute the following:
 - if no selection is active release the primary clipboard
 - if a selection is active capture the primary clipboard
 - center click paste needs to collect the selection text before changing mark and cursor. That's all
 - no primary clipboard implicit management happens inside scripts or on macro recording
- tabs
- slash all special mouse actions, add menus and close buttons
- save, refresh becomes a subcommand of buffer
- guessing indentation (dtrt-indent mode1)
- auto-equalize indentation on paste
- sloppy focus (change focus only when the mouse moves to a different frame) and disable warping
- macro recording
- resize should work across multiple frames
- some commands should be displayed on the working directory line (last command, two most used commands)
- move stuff to a namespace
- in buffers associated to jobs the cursor should be fixed at the end and inserting text should result in input to the job

- comment region command
- ability to persist the status of a window
- auto-reloading buffers when there is no change and the file on disk was changed
- debugger integration (just displaying currently executed line)
- selection should copy selected text on past not on selection, for better efficiency (selection slowdown is noticeable on mouse selection)
- extend regular expressions in 's' to be lexically aware
- word movement, word selection and tokenization should be tied to syntax analysis
- make easy way to reindent though external filter
- use an editor for the command line
- cleanup of unused functions (how?)
- all configuration options in the default configuration file with comments
- open in a directory view is relative to the directory
- possibility to specify selection background exactly (instead of difference)

- document:
 s, c, m, ss, regexp, regsub, new buffer subcommands

https://github.com/chriskempson/tomorrow-theme